/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.mup;

import VerifyFields.VerifyName;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.event.ActionEvent;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.JTextField;

/**
 *
 * @author Sumit_Saseendran
 */
public class Constituents extends javax.swing.JPanel {
    
    private CardLayout cl;
    private Pnpids pnpids;
    private Msis msis;
    private Registrykeys registrykeys;
    private SoftwareIdentityInstance softwareIdentityInstance;
    

    /**
     * Creates new form Panel3sub6
     */
    public Constituents() {
        cl = new CardLayout();
        pnpids = new Pnpids();
        msis = new Msis();
        registrykeys = new Registrykeys();
        softwareIdentityInstance = new SoftwareIdentityInstance();
        initComponents();
        jPanel2.setVisible(false);
        invMethodComboBox.addActionListener((ActionEvent ae) -> {
            if (invMethodComboBox.getSelectedItem().toString().equalsIgnoreCase("pnpIds")) {
                jPanel2.setVisible(true);
                cl.show(jPanel2, "1");
            } else if (invMethodComboBox.getSelectedItem().toString().equalsIgnoreCase("msis")) {
                jPanel2.setVisible(true);
                cl.show(jPanel2, "2");
            } else if (invMethodComboBox.getSelectedItem().toString().equalsIgnoreCase("registryKeys")) {
                jPanel2.setVisible(true);
                cl.show(jPanel2, "3");
            } else if (invMethodComboBox.getSelectedItem().toString().equalsIgnoreCase("softwareIdentityInstances")) {
                jPanel2.setVisible(true);
                cl.show(jPanel2, "4");
            } else if (invMethodComboBox.getSelectedItem().toString().equalsIgnoreCase("<select one>")) {
                jPanel2.setVisible(false);
            }
        });
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        smbiosVersionField = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        invMethodComboBox = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 0, 0), null, new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        jLabel1.setText("Update Component Type  ");

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        jLabel2.setText("SMBIOS Version");
        jLabel2.setVisible(false);

        smbiosVersionField.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        smbiosVersionField.setInputVerifier(new VerifyName());
        smbiosVersionField.setPreferredSize(new java.awt.Dimension(106, 22));
        smbiosVersionField.setVisible(false);
        smbiosVersionField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                smbiosVersionFieldFocusLost(evt);
            }
        });

        jPanel1.setLayout(null);
        jPanel1.setLayout(cl);

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        jLabel3.setText("Inventory Metadata Method");

        invMethodComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<select one>" }));
        invMethodComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invMethodComboBoxActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(null);
        jPanel2.setLayout(cl);

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        jLabel4.setText("<select Component Type>");
        jLabel4.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jLabel4PropertyChange(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addGap(143, 143, 143)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(invMethodComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(smbiosVersionField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 240, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(smbiosVersionField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(invMethodComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(346, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        jPanel2.add(pnpids,"1");
        jPanel2.add(msis,"2");
        jPanel2.add(registrykeys,"3");
        jPanel2.add(softwareIdentityInstance,"4");
    }// </editor-fold>//GEN-END:initComponents

    private void invMethodComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invMethodComboBoxActionPerformed
        
    }//GEN-LAST:event_invMethodComboBoxActionPerformed

    public Pnpids getPnpids() {
        return pnpids;
    }

    private void jLabel4PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jLabel4PropertyChange
        jPanel2.setVisible(false);
        if(jLabel4.getText().equalsIgnoreCase("<select Component Type>")){
            jLabel2.setVisible(false);
            smbiosVersionField.setVisible(false);
            jLabel3.setVisible(false);
            invMethodComboBox.setVisible(false);
        }else if(jLabel4.getText().equalsIgnoreCase("BIOS")){
            jLabel2.setVisible(true);
            smbiosVersionField.setVisible(true);
            jLabel3.setVisible(false);
            invMethodComboBox.setVisible(false);
        }else{
            jLabel2.setVisible(false);
            smbiosVersionField.setVisible(false);
            jLabel3.setVisible(true);
            invMethodComboBox.setVisible(true);
            invMethodComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<select one>", "pnpIds", "msis", "registryKeys", "softwareIdentityInstances" }));
        }
    }//GEN-LAST:event_jLabel4PropertyChange

    private void smbiosVersionFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_smbiosVersionFieldFocusLost
        // TODO add your handling code here:
        smbiosVersionField.setText(smbiosVersionField.getText().trim());
    }//GEN-LAST:event_smbiosVersionFieldFocusLost

    public JLabel getjLabel4() {
        return jLabel4;
    }

    public Msis getMsis() {
        return msis;
    }

    public void setMsis(Msis msis) {
        this.msis = msis;
    }

    public Registrykeys getRegistrykeys() {
        return registrykeys;
    }

    public void setRegistrykeys(Registrykeys registrykeys) {
        this.registrykeys = registrykeys;
    }

    public SoftwareIdentityInstance getSoftwareIdentityInstance() {
        return softwareIdentityInstance;
    }

    public void setSoftwareIdentityInstance(SoftwareIdentityInstance softwareIdentityInstance) {
        this.softwareIdentityInstance = softwareIdentityInstance;
    }

    public JComboBox getjComboBox1() {
        return invMethodComboBox;
    }

    public void setjComboBox1(JComboBox jComboBox1) {
        this.invMethodComboBox = jComboBox1;
    }

    public JTextField getjTextField2() {
        return smbiosVersionField;
    }
    
       
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox invMethodComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField smbiosVersionField;
    // End of variables declaration//GEN-END:variables

    public void clearField() {
        jLabel4.setText("<select Component Type>");
        smbiosVersionField.setText("");
        invMethodComboBox.setSelectedIndex(0);
        msis.clearField();
        registrykeys.clearField();
        softwareIdentityInstance.clearField();
    }

    public boolean checkField(String errorNode) {
        smbiosVersionField.setBackground(Color.white);
        if (errorNode.equalsIgnoreCase(smbiosVersionField.getText())) {
            smbiosVersionField.setBackground(Color.yellow);
            return true;
        } else if ( invMethodComboBox.getSelectedItem().toString().equalsIgnoreCase("msis") && checkField(errorNode,msis.getjTable1())) {
            return true;
        }else if (invMethodComboBox.getSelectedItem().toString().equalsIgnoreCase("registrykeys") && checkField(errorNode,registrykeys.getjTable1())) {
            return true;
        }else if (invMethodComboBox.getSelectedItem().toString().equalsIgnoreCase("softwareIdentityInstance") && checkField(errorNode,softwareIdentityInstance.getjTable1())) {
            return true;
        }
        return false;
    }
    
    boolean checkField(String errorNode, JTable jTable1) {
        int rowCount=jTable1.getRowCount();
        int colCount=jTable1.getColumnCount();
        for(int row = 0; row< rowCount;row++){
            for(int col = 0; col < colCount; col++){
                if(errorNode.equalsIgnoreCase(jTable1.getValueAt(row, col).toString())){
                    return true;
                }
            }
        }
        return false;
    }

}
